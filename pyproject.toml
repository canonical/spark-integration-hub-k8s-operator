# Copyright 2024 Canonical Ltd.
# See LICENSE file for licensing details.

# Testing tools configuration
[tool.coverage.run]
branch = true

[tool.coverage.report]
show_missing = true

[tool.pytest.ini_options]
minversion = "6.0"
log_cli_level = "INFO"
asyncio_mode = "auto"
markers = ["unstable"]

# Formatting tools configuration
[tool.black]
line-length = 99
target-version = ["py310"]

[tool.isort]
profile = "black"

[tool.poetry]
package-mode = false
requires-poetry = ">=2.0.0"

[tool.poetry.dependencies]
python = ">3.10,<4.0"
ops = ">=2.10.1"
boto3 = ">=1.34.55"
lightkube = "0.15.4"

[tool.poetry.group.charm-libs.dependencies]
ops = "^2.13.0"
poetry-core = "*"
# data_platform_libs.v0.data_interface.py
pydantic = "^1.10.17, <2"
# loki_k8s/v1/loki_push_api.py
pyyaml = "*"
# loki_k8s/v1/loki_push_api.py
cosl = "*"

[tool.poetry.group.format]
optional = true

[tool.poetry.group.format.dependencies]
black = "^22.3.0"
ruff = ">=0.2.2"

[tool.poetry.group.lint]
optional = true

[tool.poetry.group.lint.dependencies]
black = ">=22.3.0"
ruff = ">=0.2.2"
codespell = ">=2.2.2"

[tool.poetry.group.unit]
optional = true

[tool.poetry.group.unit.dependencies]
pytest = "<8.2.0"
pytest-asyncio = ">=0.21"
coverage = { extras = ["toml"], version = ">7.0" }
ops = { extras = ["testing"], version = "^2.17.0" }

[tool.poetry.group.integration]
optional = true

[tool.poetry.group.integration.dependencies]
pytest = ">=7.2"
juju = "^3.5.2"
coverage = { extras = ["toml"], version = ">7.0" }
pytest-operator = ">0.20"
boto3 = ">=1.28.0"
tenacity = "^8.2.2"
spark8t = { git = "https://github.com/canonical/spark-k8s-toolkit-py.git", tag = "v0.0.7" }
pytest-operator-cache = { git = "https://github.com/canonical/data-platform-workflows", tag = "v29.0.0", subdirectory = "python/pytest_plugins/pytest_operator_cache" }
# pytest-operator-groups = {git = "https://github.com/canonical/data-platform-workflows", tag = "v13.1.2", subdirectory = "python/pytest_plugins/pytest_operator_groups"}
# pytest-operator-secrets = {git = "https://github.com/canonical/data-platform-workflows", tag = "v13.1.2", subdirectory = "python/pytest_plugins/pytest_operator_secrets"}

[tool.ruff]
line-length = 99
extend-exclude = ["__pycache__", "*.egg_info"]
target-version = "py310"
src = ["src", "tests"]

[tool.ruff.lint]
select = ["E", "W", "F", "C", "N", "D", "I001"]
extend-ignore = [
  "D203",
  "D204",
  "D213",
  "D215",
  "D400",
  "D401",
  "D404",
  "D406",
  "D407",
  "D408",
  "D409",
  "D413",
]
ignore = ["E501", "D107"]
per-file-ignores = { "tests/*" = ["D100", "D101", "D102", "D103", "D104", "E999"], "src/literals.py" = ["D101"] }
mccabe.max-complexity = 10

[tool.pyright]
include = ["src"]
extraPaths = ["./lib", "src"]
pythonVersion = "3.10"
pythonPlatform = "All"
