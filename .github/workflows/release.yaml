# Copyright 2024 Canonical Ltd.
# See LICENSE file for licensing details.
name: Release to Charmhub

on:
  push:
    branches:
      - 3/edge

jobs:
  release-checks:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Extract branch metadata
        shell: bash
        run: |
          BRANCH=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}
          echo "branch=${BRANCH}" >> $GITHUB_OUTPUT
          echo "risk=${BRANCH##*\/}" >> $GITHUB_OUTPUT
          echo "track=${BRANCH%*\/*}" >> $GITHUB_OUTPUT
        id: branch_metadata

      - name: Extract metadata
        shell: bash
        run: |
          VERSION=3 # This should be changed when we have multiple branches
          BASE=$(yq '.platforms' charmcraft.yaml | sed -n "s/ubuntu\@\([0-9\.]*\)\:.*/\1/p")
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          echo "base=${BASE}" >> $GITHUB_OUTPUT
        id: charm_metadata

      - name: Check consistency between metadata and release branch
        shell: bash
        run: |
          if [ "${VERSION}" != "${{ steps.branch_metadata.outputs.track }}" ]; then exit 1; fi

          # The publishing pipeline does not work for other risk than edge. The DP workflows below
          # is constraint to work with edge
          if [ "edge" != "${{ steps.branch_metadata.outputs.risk }}" ]; then exit 1; fi
        continue-on-error: false

    outputs:
      branch: ${{ steps.branch_metadata.outputs.branch }}
      track: ${{ steps.branch_metadata.outputs.track }}
      risk: ${{ steps.branch_metadata.outputs.risk }}
      base: ${{ steps.charm_metadata.outputs.base }}
      version: ${{ steps.charm_metadata.outputs.version }}

  ci-tests:
    uses: ./.github/workflows/ci.yaml

  release-libs:
    name: Release to CharmHub
    needs:
      - ci-tests
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Release any bumped charm libs
        uses: canonical/charming-actions/release-libraries@2.7.0
        with:
          credentials: "${{ secrets.CHARMHUB_TOKEN }}"
          github-token: "${{ secrets.GITHUB_TOKEN }}"

  release-charm:
    name: Release charm
    needs:
      - release-checks
      - ci-tests
    uses: canonical/data-platform-workflows/.github/workflows/release_charm_edge.yaml@v32.1.0
    with:
      track: ${{ needs.release-checks.outputs.track }}
      artifact-prefix: ${{ needs.ci-tests.outputs.artifact-prefix }}
    secrets:
      charmhub-token: ${{ secrets.CHARMHUB_TOKEN }}
    permissions:
      contents: write # Needed to create git tags
